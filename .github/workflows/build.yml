name: Lint, Build, Test and Coverage Check

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # 🔹 JOB 1: LINT
  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Dar permisos de ejecución a Gradlew
        run: chmod +x ./gradlew

      # Este paso ya ejecuta la verificación de Checkstyle
      - name: Ejecutar Checkstyle
        run: ./gradlew :app:check

      # Opcional pero recomendado: Subir el reporte de linting
      - name: Subir reporte de Checkstyle
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-report
          path: app/build/reports/checkstyle/

  # 🔹 JOB 2: BUILD, TEST Y VERIFICACIÓN DE COBERTURA
  build-and-test:
    name: Build, Test & Coverage Check
    # Esta línea es clave: asegura que el linting pase primero
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Construir la imagen de Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: my-java-app:latest

      # Este paso ahora ejecuta la tarea 'check', que incluye tests Y la verificación de cobertura
      - name: Ejecutar Tests y Verificación de Cobertura
        run:  |
          # Creamos los directorios para TODOS los reportes
          mkdir -p app/build/reports
          mkdir -p app/build/test-results
          # Añadimos un volumen para el reporte de Jacoco
          docker run --rm \
            -v ${{ github.workspace }}/app/build/reports:/app/app/build/reports \
            -v ${{ github.workspace }}/app/build/test-results:/app/app/build/test-results \
            my-java-app:latest ./gradlew :app:check --no-daemon

      # Subir reporte de tests (HTML)
      - name: Subir reporte HTML de tests
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: html-test-report
          path: app/build/reports/tests/test/

      # Subir resultados de tests (XML)
      - name: Subir resultados XML de tests
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: xml-test-results
          path: app/build/test-results/test/

      # NUEVO: Subir el reporte de cobertura
      - name: Subir Reporte de Cobertura (Coverage)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: app/build/reports/jacoco/test/html/